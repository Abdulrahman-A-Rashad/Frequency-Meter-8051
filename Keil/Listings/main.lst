C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2025 22:43:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include "define_ports.h"
   3          #include "delay.h"
   4          #include "lcd.h"
   5          #include "results.h"
   6          
   7          unsigned int pulse_count = 0;
   8          unsigned int frequency = 0;
   9          unsigned int last_frequency = 0;
  10          void timer0_isr() interrupt 1 
  11            {
  12   1          TR0 = 0;  // Stop Timer 0
  13   1          TR1 = 0;  // Stop Timer 1
  14   1      
  15   1          // Read Timer 1 count
  16   1          pulse_count = (TH1 << 8) | TL1;
  17   1          
  18   1          // Frequency is directly the counted pulses * 20 
  19   1          frequency = pulse_count*20;
  20   1      
  21   1          // Reset Timer 0 for 50ms delay
  22   1          TH0 = 0x3C;
  23   1          TL0 = 0xB0;
  24   1      
  25   1          // Reset Timer 1 for new measurement
  26   1          TH1 = 0x00;
  27   1          TL1 = 0x00;
  28   1      
  29   1          TR0 = 1;  // Start Timer 0
  30   1          TR1 = 1;  // Start Timer 1
  31   1        }
  32          
  33          void setup_timers() 
  34            {
  35   1          TMOD = 0x51;  // Timer 0:(16-bit timer), Timer 1:(16-bit counter)
  36   1      
  37   1          // Timer 0 for 50ms
  38   1          TH0 = 0x3C;
  39   1          TL0 = 0xB0;
  40   1      
  41   1          TH1 = 0x00;  // Clear Timer 1 counter
  42   1          TL1 = 0x00;
  43   1      
  44   1          ET0 = 1;  // Enable Timer 0 Interrupt & global interrupts
  45   1          EA = 1; 
  46   1      
  47   1          TR0 = 1;  // Start Timer 0 & Timer 1
  48   1          TR1 = 1;  
  49   1        }
  50          
  51          void display_frequency(unsigned int freq) 
  52            { 
  53   1          lcd_print("Freq: ");
  54   1          print_result(freq);
C51 COMPILER V9.60.7.0   MAIN                                                              03/03/2025 22:43:28 PAGE 2   

  55   1          lcd_print("Hz");
  56   1        }
  57          
  58          void main() 
  59            {
  60   1          init();  // Initialize LCD
  61   1          setup_timers();
  62   1      
  63   1          while (1) 
  64   1            { 
  65   2              if (frequency != last_frequency) // To avoid keep uptading the LCD
  66   2              {
  67   3                  display_frequency(frequency);
  68   3              }
  69   2              last_frequency = frequency; 
  70   2            }
  71   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    551    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
